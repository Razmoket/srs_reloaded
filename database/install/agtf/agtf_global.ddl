
connect agtf/&1@&2

set serveroutput on
exec dbms_output.put_line('#######agtf_global');


--
-- CATEG  (Table) 
--
CREATE TABLE CATEG
(
  ID_CATEG          VARCHAR2(15 CHAR)           NOT NULL,
  LIB_CATEG         VARCHAR2(64 CHAR)           NOT NULL,
  LIB_AFF_CATEG     VARCHAR2(128 CHAR)          NOT NULL,
  DATE_VALIDITE     DATE                            NULL,
  LIB_AFF_CATEG_EN  VARCHAR2(128 CHAR)              NULL
);


--
-- SEQ_AGTF  (Sequence) 
--
CREATE SEQUENCE SEQ_AGTF
  START WITH 183828
  MAXVALUE 9999999999999999999999999999
  MINVALUE 1
  NOCYCLE
  NOCACHE
  ORDER;


--
-- CTRL_ACCES  (Table) 
--
CREATE TABLE CTRL_ACCES
(
  ID_USER        VARCHAR2(15 CHAR)              NOT NULL,
  PW_USER        VARCHAR2(15 CHAR)                  NULL,
  NIV_USER       VARCHAR2(15 CHAR)                  NULL,
  DATE_VALIDITE  DATE                               NULL
);


--
-- DOSSIER  (Table) 
--
CREATE TABLE DOSSIER
(
  ID_DOSSIER       VARCHAR2(15 CHAR)            NOT NULL,
  LIB_DOSSIER      VARCHAR2(64 CHAR)            NOT NULL,
  LIB_AFF_DOSSIER  VARCHAR2(128 CHAR)           NOT NULL,
  DATE_VALIDITE    DATE                             NULL
);


--
-- PLAN_TABLE  (Table) 
--
CREATE TABLE PLAN_TABLE
(
  STATEMENT_ID       VARCHAR2(30 CHAR)              NULL,
  PLAN_ID            NUMBER                         NULL,
  TIMESTAMP          DATE                           NULL,
  REMARKS            VARCHAR2(4000 CHAR)            NULL,
  OPERATION          VARCHAR2(30 CHAR)              NULL,
  OPTIONS            VARCHAR2(255 CHAR)             NULL,
  OBJECT_NODE        VARCHAR2(128 CHAR)             NULL,
  OBJECT_OWNER       VARCHAR2(30 CHAR)              NULL,
  OBJECT_NAME        VARCHAR2(30 CHAR)              NULL,
  OBJECT_ALIAS       VARCHAR2(65 CHAR)              NULL,
  OBJECT_INSTANCE    INTEGER                        NULL,
  OBJECT_TYPE        VARCHAR2(30 CHAR)              NULL,
  OPTIMIZER          VARCHAR2(255 CHAR)             NULL,
  SEARCH_COLUMNS     NUMBER                         NULL,
  ID                 INTEGER                        NULL,
  PARENT_ID          INTEGER                        NULL,
  DEPTH              INTEGER                        NULL,
  POSITION           INTEGER                        NULL,
  COST               INTEGER                        NULL,
  CARDINALITY        INTEGER                        NULL,
  BYTES              INTEGER                        NULL,
  OTHER_TAG          VARCHAR2(255 CHAR)             NULL,
  PARTITION_START    VARCHAR2(255 CHAR)             NULL,
  PARTITION_STOP     VARCHAR2(255 CHAR)             NULL,
  PARTITION_ID       INTEGER                        NULL,
  OTHER              LONG                           NULL,
  DISTRIBUTION       VARCHAR2(30 CHAR)              NULL,
  CPU_COST           INTEGER                        NULL,
  IO_COST            INTEGER                        NULL,
  TEMP_SPACE         INTEGER                        NULL,
  ACCESS_PREDICATES  VARCHAR2(4000 CHAR)            NULL,
  FILTER_PREDICATES  VARCHAR2(4000 CHAR)            NULL,
  PROJECTION         VARCHAR2(4000 CHAR)            NULL,
  TIME               INTEGER                        NULL,
  QBLOCK_NAME        VARCHAR2(30 CHAR)              NULL,
  OTHER_XML          CLOB                           NULL
);


--
-- PUBLICATION  (Table) 
--
CREATE TABLE PUBLICATION
(
  ID_PUBLICATION       VARCHAR2(15 CHAR)        NOT NULL,
  LIB_PUBLICATION      VARCHAR2(64 CHAR)        NOT NULL,
  LIB_AFF_PUBLICATION  VARCHAR2(128 CHAR)       NOT NULL,
  DATE_VALIDITE        DATE                         NULL
);


--
-- QUEST_SX_PLAN1  (Table) 
--
CREATE TABLE QUEST_SX_PLAN1
(
  STATEMENT_ID       VARCHAR2(30 CHAR)              NULL,
  TIMESTAMP          DATE                           NULL,
  REMARKS            VARCHAR2(80 CHAR)              NULL,
  OPERATION          VARCHAR2(30 CHAR)              NULL,
  OPTIONS            VARCHAR2(255 CHAR)             NULL,
  OBJECT_NODE        VARCHAR2(128 CHAR)             NULL,
  OBJECT_OWNER       VARCHAR2(30 CHAR)              NULL,
  OBJECT_NAME        VARCHAR2(30 CHAR)              NULL,
  OBJECT_INSTANCE    NUMBER                         NULL,
  OBJECT_TYPE        VARCHAR2(30 CHAR)              NULL,
  OPTIMIZER          VARCHAR2(255 CHAR)             NULL,
  SEARCH_COLUMNS     NUMBER                         NULL,
  ID                 NUMBER                         NULL,
  PARENT_ID          NUMBER                         NULL,
  POSITION           NUMBER                         NULL,
  COST               NUMBER                         NULL,
  CARDINALITY        NUMBER                         NULL,
  BYTES              NUMBER                         NULL,
  OTHER_TAG          VARCHAR2(255 CHAR)             NULL,
  PARTITION_START    VARCHAR2(255 CHAR)             NULL,
  PARTITION_STOP     VARCHAR2(255 CHAR)             NULL,
  PARTITION_ID       NUMBER                         NULL,
  OTHER              LONG                           NULL,
  DISTRIBUTION       VARCHAR2(30 CHAR)              NULL,
  CPU_COST           NUMBER(38)                     NULL,
  IO_COST            NUMBER(38)                     NULL,
  TEMP_SPACE         NUMBER(38)                     NULL,
  ACCESS_PREDICATES  VARCHAR2(4000 CHAR)            NULL,
  FILTER_PREDICATES  VARCHAR2(4000 CHAR)            NULL
);


--
-- R_HISTO_TERME  (Table) 
--
CREATE TABLE R_HISTO_TERME
(
  ID_HISTO     NUMBER(10)                       NOT NULL,
  QUAND_HISTO  DATE                             NOT NULL,
  QUOI_HISTO   VARCHAR2(256 CHAR)               NOT NULL,
  CMT_HISTO    VARCHAR2(512 CHAR)                   NULL,
  QUI_HISTO    VARCHAR2(15 CHAR)                NOT NULL,
  ID_TERME     NUMBER(10)                       NOT NULL
);


--
-- R_LOCK_TERME  (Table) 
--
CREATE TABLE R_LOCK_TERME
(
  ID_TERME_LOCK  NUMBER(10)                     NOT NULL,
  ID_USER_LOCK   VARCHAR2(15 CHAR)              NOT NULL
);


--
-- R_NOTE_TERME  (Table) 
--
CREATE TABLE R_NOTE_TERME
(
  ID_NOTE     NUMBER(15)                        NOT NULL,
  QUAND_NOTE  DATE                              NOT NULL,
  QUOI_NOTE   VARCHAR2(512 CHAR)                NOT NULL,
  QUI_NOTE    VARCHAR2(15 CHAR)                 NOT NULL,
  ID_TERME    NUMBER(10)                        NOT NULL
);


--
-- R_STATUT  (Table) 
--
CREATE TABLE R_STATUT
(
  ID_TERME   NUMBER(10)                         NOT NULL,
  ID_STATUT  VARCHAR2(15 CHAR)                  NOT NULL,
  DATE_POSE  DATE                                   NULL
);


--
-- R_VARIANTE  (Table) 
--
CREATE TABLE R_VARIANTE
(
  ID_REFERENT  NUMBER(10)                       NOT NULL,
  ID_VARIANTE  NUMBER(10)                       NOT NULL
);


--
-- R_ZONE  (Table) 
--
CREATE TABLE R_ZONE
(
  ID_TERME  NUMBER(10)                          NOT NULL,
  ID_ZONE   VARCHAR2(64 CHAR)                   NOT NULL
);


--
-- STATUT  (Table) 
--
CREATE TABLE STATUT
(
  ID_STATUT       VARCHAR2(15 CHAR)             NOT NULL,
  LIB_STATUT      VARCHAR2(64 CHAR)             NOT NULL,
  LIB_AFF_STATUT  VARCHAR2(128 CHAR)            NOT NULL
);


--
-- TERME  (Table) 
--
CREATE TABLE TERME
(
  ID_TERME         NUMBER(10)                   NOT NULL,
  GRAPHIE_TERME    VARCHAR2(256 CHAR)           NOT NULL,
  EXTENSION_TERME  VARCHAR2(256 CHAR)               NULL,
  CMT_TERME        VARCHAR2(512 CHAR)               NULL,
  ID_CATEG         VARCHAR2(15 CHAR)            NOT NULL,
  ID_DOSSIER       VARCHAR2(15 CHAR)            NOT NULL,
  ID_PUBLICATION   VARCHAR2(15 CHAR)            NOT NULL
);


--
-- TOAD_PLAN_SQL  (Table) 
--
CREATE TABLE TOAD_PLAN_SQL
(
  USERNAME      VARCHAR2(30 CHAR)                   NULL,
  STATEMENT_ID  VARCHAR2(32 CHAR)                   NULL,
  TIMESTAMP     DATE                                NULL,
  STATEMENT     VARCHAR2(2000 CHAR)                 NULL
);


--
-- TOAD_PLAN_TABLE  (Table) 
--
CREATE TABLE TOAD_PLAN_TABLE
(
  STATEMENT_ID     VARCHAR2(32 CHAR)                NULL,
  TIMESTAMP        DATE                             NULL,
  REMARKS          VARCHAR2(80 CHAR)                NULL,
  OPERATION        VARCHAR2(30 CHAR)                NULL,
  OPTIONS          VARCHAR2(30 CHAR)                NULL,
  OBJECT_NODE      VARCHAR2(128 CHAR)               NULL,
  OBJECT_OWNER     VARCHAR2(30 CHAR)                NULL,
  OBJECT_NAME      VARCHAR2(30 CHAR)                NULL,
  OBJECT_INSTANCE  NUMBER                           NULL,
  OBJECT_TYPE      VARCHAR2(30 CHAR)                NULL,
  SEARCH_COLUMNS   NUMBER                           NULL,
  ID               NUMBER                           NULL,
  COST             NUMBER                           NULL,
  PARENT_ID        NUMBER                           NULL,
  POSITION         NUMBER                           NULL,
  CARDINALITY      NUMBER                           NULL,
  OPTIMIZER        VARCHAR2(255 CHAR)               NULL,
  BYTES            NUMBER                           NULL,
  OTHER_TAG        VARCHAR2(255 CHAR)               NULL,
  PARTITION_ID     NUMBER                           NULL,
  PARTITION_START  VARCHAR2(255 CHAR)               NULL,
  PARTITION_STOP   VARCHAR2(255 CHAR)               NULL,
  DISTRIBUTION     VARCHAR2(30 CHAR)                NULL,
  OTHER            LONG                             NULL
);


--
-- ZONE  (Table) 
--
CREATE TABLE ZONE
(
  ID_ZONE       VARCHAR2(15 CHAR)               NOT NULL,
  LIB_ZONE      VARCHAR2(64 CHAR)               NOT NULL,
  LIB_AFF_ZONE  VARCHAR2(128 CHAR)              NOT NULL
);


--
-- AGTF_MALEK3  (Index) 
--
CREATE INDEX AGTF_MALEK3 ON TERME
(GRAPHIE_TERME, EXTENSION_TERME);


--
-- CATEG_PK_ID_CATEG  (Index) 
--
CREATE UNIQUE INDEX CATEG_PK_ID_CATEG ON CATEG
(ID_CATEG);


--
-- CTRL_ACCES_PK_ID_USER  (Index) 
--
CREATE UNIQUE INDEX CTRL_ACCES_PK_ID_USER ON CTRL_ACCES
(ID_USER);


--
-- DOSSIER_PK_ID_DOSSIER  (Index) 
--
CREATE UNIQUE INDEX DOSSIER_PK_ID_DOSSIER ON DOSSIER
(ID_DOSSIER);


--
-- IDX_TERME_GRTERME_EXTTERM_FX  (Index) 
--
CREATE INDEX IDX_TERME_GRTERME_EXTTERM_FX ON TERME
("GRAPHIE_TERME"||NVL("EXTENSION_TERME",''));


--
-- NOTE_PK_ID_NOTE_1  (Index) 
--
CREATE UNIQUE INDEX NOTE_PK_ID_NOTE_1 ON R_NOTE_TERME
(ID_NOTE);


--
-- PUBLICATION_PK_ID_PUBLICATION  (Index) 
--
CREATE UNIQUE INDEX PUBLICATION_PK_ID_PUBLICATION ON PUBLICATION
(ID_PUBLICATION);


--
-- RHT_IDX_ID_TERME  (Index) 
--
CREATE INDEX RHT_IDX_ID_TERME ON R_HISTO_TERME
(ID_TERME);


--
-- RHT_PK_ID_HISTO  (Index) 
--
CREATE UNIQUE INDEX RHT_PK_ID_HISTO ON R_HISTO_TERME
(ID_HISTO);


--
-- RNT_IDX_ID_TERME  (Index) 
--
CREATE INDEX RNT_IDX_ID_TERME ON R_NOTE_TERME
(ID_TERME);


--
-- RS_IDX_ID_STATUT  (Index) 
--
CREATE INDEX RS_IDX_ID_STATUT ON R_STATUT
(ID_STATUT);


--
-- RS_IDX_ID_TERME  (Index) 
--
CREATE INDEX RS_IDX_ID_TERME ON R_STATUT
(ID_TERME);


--
-- RS_IDX_STATUT_TERME  (Index) 
--
CREATE INDEX RS_IDX_STATUT_TERME ON R_STATUT
(ID_STATUT, ID_TERME);


--
-- RV_IDX_ID_REFERENT  (Index) 
--
CREATE INDEX RV_IDX_ID_REFERENT ON R_VARIANTE
(ID_REFERENT);


--
-- RV_IDX_ID_VARIANTE  (Index) 
--
CREATE INDEX RV_IDX_ID_VARIANTE ON R_VARIANTE
(ID_VARIANTE);


--
-- RZ_IDX_ID_TERME  (Index) 
--
CREATE INDEX RZ_IDX_ID_TERME ON R_ZONE
(ID_TERME);


--
-- RZ_IDX_ID_ZONE  (Index) 
--
CREATE INDEX RZ_IDX_ID_ZONE ON R_ZONE
(ID_ZONE);


--
-- STATUT_PK_ID_STATUT  (Index) 
--
CREATE UNIQUE INDEX STATUT_PK_ID_STATUT ON STATUT
(ID_STATUT);


--
-- TERME_IDX_GRAPHIE_TERME  (Index) 
--
CREATE INDEX TERME_IDX_GRAPHIE_TERME ON TERME
(GRAPHIE_TERME);


--
-- TERME_IDX_ID_CATEG  (Index) 
--
CREATE INDEX TERME_IDX_ID_CATEG ON TERME
(ID_CATEG);


--
-- TERME_IDX_ID_DOSSIER  (Index) 
--
CREATE INDEX TERME_IDX_ID_DOSSIER ON TERME
(ID_DOSSIER);


--
-- TERME_IDX_ID_PUBLICATION  (Index) 
--
CREATE INDEX TERME_IDX_ID_PUBLICATION ON TERME
(ID_PUBLICATION);


--
-- TERME_PK_ID_TERME  (Index) 
--
CREATE UNIQUE INDEX TERME_PK_ID_TERME ON TERME
(ID_TERME);


--
-- TPSQL_IDX  (Index) 
--
CREATE UNIQUE INDEX TPSQL_IDX ON TOAD_PLAN_SQL
(STATEMENT_ID);


--
-- TPTBL_IDX  (Index) 
--
CREATE INDEX TPTBL_IDX ON TOAD_PLAN_TABLE
(STATEMENT_ID);


--
-- ZONE_PK_ID_ZONE  (Index) 
--
CREATE UNIQUE INDEX ZONE_PK_ID_ZONE ON ZONE
(ID_ZONE);


-- 
-- Non Foreign Key Constraints for Table CATEG 
-- 
ALTER TABLE CATEG ADD (
  CONSTRAINT CATEG_PK_ID_CATEG
  PRIMARY KEY
  (ID_CATEG)
  USING INDEX CATEG_PK_ID_CATEG
  ENABLE VALIDATE);

-- 
-- Non Foreign Key Constraints for Table CTRL_ACCES 
-- 
ALTER TABLE CTRL_ACCES ADD (
  CONSTRAINT CTRL_ACCES_PK_ID_USER
  PRIMARY KEY
  (ID_USER)
  USING INDEX CTRL_ACCES_PK_ID_USER
  ENABLE VALIDATE);

-- 
-- Non Foreign Key Constraints for Table DOSSIER 
-- 
ALTER TABLE DOSSIER ADD (
  CONSTRAINT DOSSIER_PK_ID_DOSSIER
  PRIMARY KEY
  (ID_DOSSIER)
  USING INDEX DOSSIER_PK_ID_DOSSIER
  ENABLE VALIDATE);

-- 
-- Non Foreign Key Constraints for Table PUBLICATION 
-- 
ALTER TABLE PUBLICATION ADD (
  CONSTRAINT PUBLICATION_PK_ID_PUBLICATION
  PRIMARY KEY
  (ID_PUBLICATION)
  USING INDEX PUBLICATION_PK_ID_PUBLICATION
  ENABLE VALIDATE);

-- 
-- Non Foreign Key Constraints for Table R_HISTO_TERME 
-- 
ALTER TABLE R_HISTO_TERME ADD (
  CONSTRAINT RHT_PK_ID_HISTO
  PRIMARY KEY
  (ID_HISTO)
  USING INDEX RHT_PK_ID_HISTO
  ENABLE VALIDATE);

-- 
-- Non Foreign Key Constraints for Table R_NOTE_TERME 
-- 
ALTER TABLE R_NOTE_TERME ADD (
  CONSTRAINT RNT_PK_ID_NOTE
  PRIMARY KEY
  (ID_NOTE)
  USING INDEX NOTE_PK_ID_NOTE_1
  ENABLE VALIDATE);

-- 
-- Non Foreign Key Constraints for Table STATUT 
-- 
ALTER TABLE STATUT ADD (
  CONSTRAINT STATUT_PK_ID_STATUT
  PRIMARY KEY
  (ID_STATUT)
  USING INDEX STATUT_PK_ID_STATUT
  ENABLE VALIDATE);

-- 
-- Non Foreign Key Constraints for Table TERME 
-- 
ALTER TABLE TERME ADD (
  CONSTRAINT TERME_PK_ID_TERME
  PRIMARY KEY
  (ID_TERME)
  USING INDEX TERME_PK_ID_TERME
  ENABLE VALIDATE);

-- 
-- Non Foreign Key Constraints for Table ZONE 
-- 
ALTER TABLE ZONE ADD (
  CONSTRAINT ZONE_PK_ID_ZONE
  PRIMARY KEY
  (ID_ZONE)
  USING INDEX ZONE_PK_ID_ZONE
  ENABLE VALIDATE);

-- 
-- Foreign Key Constraints for Table R_HISTO_TERME 
-- 
ALTER TABLE R_HISTO_TERME ADD (
  CONSTRAINT CTRL_ACCES_FK_RHT_ID_USER 
  FOREIGN KEY (QUI_HISTO) 
  REFERENCES CTRL_ACCES (ID_USER)
  ENABLE VALIDATE);

-- 
-- Foreign Key Constraints for Table R_LOCK_TERME 
-- 
ALTER TABLE R_LOCK_TERME ADD (
  CONSTRAINT CTRL_ACCES_FK_RLT_ID_USER 
  FOREIGN KEY (ID_USER_LOCK) 
  REFERENCES CTRL_ACCES (ID_USER)
  ENABLE VALIDATE,
  CONSTRAINT TERME_FK_RLT_ID_TERME 
  FOREIGN KEY (ID_TERME_LOCK) 
  REFERENCES TERME (ID_TERME)
  ENABLE VALIDATE);

-- 
-- Foreign Key Constraints for Table R_NOTE_TERME 
-- 
ALTER TABLE R_NOTE_TERME ADD (
  CONSTRAINT CTRL_ACCES_FK_RNT_ID_USER 
  FOREIGN KEY (QUI_NOTE) 
  REFERENCES CTRL_ACCES (ID_USER)
  ENABLE VALIDATE,
  CONSTRAINT TERME_FK_RNT_ID_TERME 
  FOREIGN KEY (ID_TERME) 
  REFERENCES TERME (ID_TERME)
  ENABLE VALIDATE);

-- 
-- Foreign Key Constraints for Table R_STATUT 
-- 
ALTER TABLE R_STATUT ADD (
  CONSTRAINT STATUT_FK_RS_ID_STATUT 
  FOREIGN KEY (ID_STATUT) 
  REFERENCES STATUT (ID_STATUT)
  ENABLE VALIDATE,
  CONSTRAINT TERME_FK_RS_ID_TERME 
  FOREIGN KEY (ID_TERME) 
  REFERENCES TERME (ID_TERME)
  ENABLE VALIDATE);

-- 
-- Foreign Key Constraints for Table R_VARIANTE 
-- 
ALTER TABLE R_VARIANTE ADD (
  CONSTRAINT TERME_FK_RV_ID_TERME_1 
  FOREIGN KEY (ID_REFERENT) 
  REFERENCES TERME (ID_TERME)
  ENABLE VALIDATE,
  CONSTRAINT TERME_FK_RV_ID_TERME_2 
  FOREIGN KEY (ID_VARIANTE) 
  REFERENCES TERME (ID_TERME)
  ENABLE VALIDATE);

-- 
-- Foreign Key Constraints for Table R_ZONE 
-- 
ALTER TABLE R_ZONE ADD (
  CONSTRAINT TERME_FK_RZ_ID_TERME 
  FOREIGN KEY (ID_TERME) 
  REFERENCES TERME (ID_TERME)
  ENABLE VALIDATE,
  CONSTRAINT ZONE_FK_RZ_ID_ZONE 
  FOREIGN KEY (ID_ZONE) 
  REFERENCES ZONE (ID_ZONE)
  ENABLE VALIDATE);

-- 
-- Foreign Key Constraints for Table TERME 
-- 
ALTER TABLE TERME ADD (
  CONSTRAINT CATEG_FK_TERME_ID_CATEG 
  FOREIGN KEY (ID_CATEG) 
  REFERENCES CATEG (ID_CATEG)
  ENABLE VALIDATE,
  CONSTRAINT DOSSIER_FK_TERME_ID_DOSSIER 
  FOREIGN KEY (ID_DOSSIER) 
  REFERENCES DOSSIER (ID_DOSSIER)
  ENABLE VALIDATE,
  CONSTRAINT PUBLICATION_FK_TERME_ID_PUBLI 
  FOREIGN KEY (ID_PUBLICATION) 
  REFERENCES PUBLICATION (ID_PUBLICATION)
  ENABLE VALIDATE);


